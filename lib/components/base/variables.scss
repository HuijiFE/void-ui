/**
 * Void-UI style variables
 */

// ================================================================
// Base

// Typography

$font-size-base: 15 !default;
$line-height-base: 1.618 !default;

// Core

$type-theme:  'lite', 'dark';
$type-tone:   'primary', 'secondary', 'success', 'warning', 'danger';
$type-skin:   'fill', 'flat', 'plain', 'silk';
$type-shape:  'rect', 'pill', 'square', 'circle';
$type-size:   'xsmall', 'small', 'medium', 'large', 'xlarge';

// Colors

@function theme($theme: 'lite', $role: 'fg', $level: 'normal') {
  $value: map-get($map: $color-map-theme, $key: #{$theme}-#{$role}-#{$level});

  @if $value {
    @return $value;
  } @else {
    @error 'Theme color no found #{$theme}-#{$role}-#{$level}';
  }
}

@function tone($tone: 'primary', $level: 'standard') {
  $value: map-get($map: $color-map-tone, $key: #{$tone}-#{$level});

  @if $value {
    @return $value;
  } @else {
    @error 'Tone color no found: #{$tone}-#{$level}';
  }
}

// Raise

@function raise-shadow($level: 2) {
  @return map-get($map: $raise-shadow-map, $key: $level);
}

// Gap Border Radius

@function gap($key) {
  @return map-get($gap-map, $key);
}

$gap-base: gap('medium') !default;

// Responsive

$type-breakpoint-key: 'xs', 'sm', 'md', 'lg', 'xl';
$type-media-alias: $type-breakpoint-key, 'gtXs', 'ltSm', 'gtSm', 'ltMd', 'gtMd', 'ltLg', 'gtLg', 'ltXl';

@function breakpoint($key) {
  @return map-get($breakpoints, $key);
}

// ================================================================
// Layout

$type-direction: row, row-reverse, column, column-reverse;

