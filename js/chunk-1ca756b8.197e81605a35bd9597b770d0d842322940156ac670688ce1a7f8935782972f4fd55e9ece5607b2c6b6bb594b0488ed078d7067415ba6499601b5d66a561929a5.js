(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1ca756b8"],{"2be6":function(e,t,n){"use strict";function o(e,t,n,o,r,a,s,i){var l,c="function"===typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),o&&(c.functional=!0),a&&(c._scopeId="data-v-"+a),s?(l=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||"undefined"===typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),r&&r.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(s)},c._ssrRegister=l):r&&(l=i?function(){r.call(this,this.$root.$options.shadowRoot)}:r),l)if(c.functional){c._injectStyles=l;var p=c.render;c.render=function(e,t){return l.call(t),p(e,t)}}else{var _=c.beforeCreate;c.beforeCreate=_?[].concat(_,l):[l]}return{exports:e,options:c}}n.d(t,"a",function(){return o})},4813:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("article",[n("h1",[e._v("Flexbox 弹性盒子")]),n("p",[e._v("弹性盒子布局非常适合用于局部的布局，能适应各种复杂情形。配合 gap/flex/order 属性还能模拟栅格系统。该组件是响应式的。")]),n("h2",[e._v("Flex 属性的基本用法")]),e._m(0),n("p",[e._v("注意：在 Vue 单文件组件模板中使用使用数字型的 flex 属性时需要用绑定语法，这是为了性能考虑，省去将字符串转换成数字的消耗，因为这是个非常实用的布局，在一个页面中往往会有大量的 flexbox 组件。")]),n("c-example",{attrs:{path:"layout/flexbox/basic"}}),n("p",[e._v("模拟 Windows 风格磁贴")]),n("c-example",{attrs:{path:"layout/flexbox/tiles"}}),n("h1",[e._v("Gap 属性")]),n("p",[e._v("Gap 属性用于控制嵌套的弹性盒子之间的间隙。")]),n("c-example",{attrs:{path:"layout/flexbox/gap"}})],1)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("可用值为 "),n("code",[e._v("'initial' | 'auto' | 'none' | number")]),e._v("，当使用数字时，会根据父元素的方向适配成百分比单位的宽度或高度。\n属性 flex 是基于百分比的，大于 1 的数值会被视为百分数，小于 1 的数值会自动乘上 100 作为百分数。")])}],a=n("2be6"),s={},i=Object(a["a"])(s,o,r,!1,null,null,null);t["default"]=i.exports}}]);
//# sourceMappingURL=chunk-1ca756b8.197e81605a35bd9597b770d0d842322940156ac670688ce1a7f8935782972f4fd55e9ece5607b2c6b6bb594b0488ed078d7067415ba6499601b5d66a561929a5.js.map