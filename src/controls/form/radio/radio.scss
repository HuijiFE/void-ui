.#{$void}-radio {
  @include flex-inline(row, center, center);
  font-size: $form-wedgit-font-size;

  height: $form-wedgit-height;
  cursor: pointer;
  user-select: none;

  & &_input {
    display: none;
  }

  & &_outer,
  & &_border,
  & &_inner {
    border-radius: 50%;
  }

  & &_outer {
    position: relative;
    @include flex(row, center, center);
    width: $form-wedgit-circle-size;
    height: $form-wedgit-circle-size;
  }

  & &_border {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    border: $border-base;
  }

  & &_inner {
    position: relative;
    width: $radio-inner-size;
    height: $radio-inner-size;
    background-color: $color-white;
    transform: scale(0);
  }

  & &_content {
    @include flex(row, center, center);
    margin-left: $form-wedgit-content-gutter;
  }

  /*----------  gutter  ----------*/

  & + & {
    margin-left: $form-wedgit-gutter;
  }

  /*----------  theme  ----------*/

  @each $theme in $ss-themes {
    &.theme-#{$theme} {
      .#{$void}-radio_outer {
        background-color: map-get($map: $theme-background-colors, $key: $theme);
      }
      .#{$void}-radio_border {
        border-color: map-get($map: $theme-foreground-colors, $key: $theme);
      }
    }
  }

  /*----------  hover & checked  ----------*/

  &:hover,
  &:focus,
  &.checked {
    .vd-radio_border {
      border-color: $tone-primary;
    }
  }

  &.checked {
    .#{$void}-radio_border,
    .#{$void}-radio_inner {
      transition-duration: $form-wedgit-transition-duration / 2;
      transition-timing-function: ease-in;
    }
    .#{$void}-radio_border {
      border-width: $form-wedgit-circle-size / 2;
      transition-property: border-width;
      transition-delay: 0;
    }
    .#{$void}-radio_inner {
      transform: scale(1);
      transition-property: transform;
      transition-delay: $form-wedgit-transition-duration / 2;
    }
  }

  /*----------  checked  ----------*/

  @each $theme in $ss-themes {
    &.disabled.theme-#{$theme} {
      .#{$void}-radio_border {
        border-color: map-get($map: $theme-foreground-colors, $key: #{$theme}-disabled);
      }
      .#{$void}-radio_inner {
        background-color: map-get(
          $map: $theme-background-colors,
          $key: #{$theme}-disabled
        );
      }
      .#{$void}-radio_content {
        color: map-get($map: $theme-foreground-colors, $key: #{$theme}-disabled);
      }
    }
  }
}

// button形式
.#{$void}-radio-group {
  @include flex-inline;

  &.type-button {
    .#{$void}-radio {
      border: $border-base;
      border-left: 0;

      @each $size in $ss-sizes {
        &.size-#{$size} {
          font-size: map-get($map: $button-font-sizes, $key: $size);
          height: map-get($map: $button-rect-sizes, $key: $size);
          $padding: map-get($map: $button-rect-paddings, $key: $size);
          padding-left: $padding;
          padding-right: $padding;
        }
      }

      .#{$void}-radio-outer {
        display: none;
      }

      @each $tone in $ss-tones {
        &.tone-#{$tone} {
          color: map-get($map: $tone-colors, $key: $tone);
          border-color: map-get($map: $tone-colors, $key: $tone);

          &.active,
          &:active {
            color: map-get($map: $tone-colors, $key: #{$tone}-lighten);
          }

          &:first-child {
            border-color: map-get($map: $tone-colors, $key: $tone);
          }
        }
      }

      @each $theme in $ss-themes {
        &.theme-#{$theme} {
          background-color: map-get($map: $theme-background-colors, $key: #{$theme});

          &:hover,
          &.active,
          &:active {
            background-color: map-get(
              $map: $theme-background-colors,
              $key: #{$theme}-hover
            );
          }

          &.disabled,
          &[disabled] {
            color: map-get($map: $theme-foreground-colors, $key: #{$theme}-disabled);
            border-color: map-get(
              $map: $theme-foreground-colors,
              $key: #{$theme}-disabled
            );
            background-color: map-get(
              $map: $theme-background-colors,
              $key: #{$theme}-disabled
            );
          }
        }
      }

      &.checked {
        color: $color-white;
        @each $tone in $ss-tones {
          &.tone-#{$tone} {
            background-color: map-get($map: $tone-colors, $key: $tone);
            &:hover {
              background-color: map-get($map: $tone-colors, $key: #{$tone}-lighten);
            }
            &.active,
            &:active {
              background-color: map-get($map: $tone-colors, $key: #{$tone}-darken);
            }
            &.disabled,
            &[disabled] {
              color: map-get($map: $theme-background-colors, $key: lite-disabled);
              background-color: map-get(
                $map: $theme-foreground-colors,
                $key: lite-disabled
              );
            }
          }
        }
      }

      &:first-child {
        border-radius: #{$border-radius-base} 0 0 #{$border-radius-base};
        border-left: $border-base;
      }
      &:last-child {
        border-radius: 0 0 #{$border-radius-base} #{$border-radius-base};
      }
    }

    .#{$void}-radio + .#{$void}-radio {
      margin-left: 0;
    }
  }
}
