.#{$void}-toggle {
  @include flex-inline(row, center, center);
  font-size: $form-wedgit-font-size;

  height: $form-wedgit-height;
  user-select: none;
  cursor: pointer;

  & &_input {
    display: none;
  }

  & &_outer {
    position: relative;
    @include flex(row, center, center);
    width: $toggle-outer-width;
    height: $form-wedgit-circle-size;
  }

  & &_middle,
  .toggle-inner {
    transition-duration: $form-wedgit-transition-duration;
    transition-timing-function: ease-in-out;
  }

  & &_middle {
    position: relative;
    @include flex(row, flex-start, center);
    transition-property: background-color;
  }

  & &_inner {
    position: absolute;
    @include flex(row, flex-start, center);
    top: 0.02rem;
    left: 0.02rem;
    transition-property: transform;
  }

  & &_content {
    @include flex(row, center, center);
    margin-left: $form-wedgit-content-gutter;
  }

  /*----------  gutter  ----------*/

  & + & {
    margin-left: $form-wedgit-gutter;
  }

  /*----------  shape  ----------*/

  // shape-rect
  &.shape-rect {
    .vd-toggle_middle {
      width: $toggle-middle-width-rect;
      height: $form-wedgit-rect-size;
      border-radius: $border-radius-base;
    }
    .vd-toggle_inner {
      width: $toggle-inner-width-rect;
      height: $form-wedgit-rect-size - 0.04rem;
      border-radius: $border-radius-base;
    }
    &.onned {
      .vd-toggle_inner {
        transform: translateX(
          $toggle-middle-width-rect - 0.04rem - $toggle-inner-width-rect
        );
      }
    }
  }
  // shape-circle
  &.shape-circle {
    .vd-toggle_middle {
      width: $toggle-middle-width-circle;
      height: $form-wedgit-circle-size;
      border-radius: $form-wedgit-circle-size / 2;
    }
    .vd-toggle_inner {
      width: $form-wedgit-circle-size - 0.04rem;
      height: $form-wedgit-circle-size - 0.04rem;
      border-radius: 50%;
    }
    &.onned {
      .vd-toggle_inner {
        transform: translateX(
          $toggle-middle-width-circle - 0.04rem - ($form-wedgit-circle-size - 0.04rem)
        );
      }
    }
  }

  /*----------  theme  ----------*/

  &.theme {
    @each $theme in $ss-themes {
      &-#{$theme} {
        color: map-get($map: $theme-foreground-colors, $key: $theme);
        .vd-toggle_middle {
          background-color: map-get(
            $map: $theme-foreground-colors,
            $key: #{$theme}-disabled
          );
        }
        .vd-toggle_inner {
          @if $theme == 'lite' {
            background-color: map-get($map: $theme-background-colors, $key: $theme);
          } @else {
            background-color: map-get(
              $map: $theme-background-colors,
              $key: #{$theme}-higher
            );
          }
        }
        &.onned {
          .vd-toggle_middle {
            background-color: $tone-primary;
          }
        }
        &.disabled {
          color: map-get($map: $theme-foreground-colors, $key: #{$theme}-disabled);
          .vd-toggle_middle {
            background-color: map-get(
              $map: $theme-background-colors,
              $key: #{$theme}-disabled
            );
          }
        }
      }
    }
  }
}
