/**
 * Control: Button
 */
@include comp('button') {
  display: inline-block;

  padding: 0;
  margin: 0;

  background-color: transparent;
  border: $border-initial;

  cursor: pointer;
  @include when('disabled') {
    cursor: not-allowed;
  }

  @include elem('inner') {
    width: 100%;
    height: 100%;

    display: flex;
    white-space: nowrap;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
  }

  @include elem('inner', 'icon', 'content') {
    line-height: 1;
  }

  // gutter between icon and content text, font-size * 0.5
  @include elem-adjacent('icon', 'content') {
    margin-left: 0.5em;
  }
  @include elem-adjacent('content', 'icon') {
    margin-left: 0.5em;
  }

  // font-size
  @each $size, $value in $button-font-size-map {
    @include prop(('size': $size)) {
      font-size: $value;
    }
  }

  @include prop(('shape': 'rect')) {
    border-radius: $border-radius-base;
  }
  @include prop(('shape': 'square')) {
    border-radius: $border-radius-base;
  }
  @include prop(('shape': 'circle')) {
    border-radius: 50%;
  }

  // size for rect and pill
  @each $size, $value in $button-height-map {
    @include prop(('size': $size, 'shape': 'rect')) {
      min-width: $value * 2.5;
      height: $value;
      padding: 0 ($value * 0.5);
    }
    @include prop(('size': $size, 'shape': 'pill')) {
      min-width: $value * 2.5;
      height: $value;
      padding: 0 ($value * 0.5);
      border-radius: $value * 0.5;
    }
  }

  // size for square
  @each $size, $value in $button-size-map-square {
    @include prop(('size': $size, 'shape': 'square')) {
      width: $value;
      height: $value;
    }
  }

  // size for circle
  @each $size, $value in $button-size-map-circle {
    @include prop(('size': $size, 'shape': 'circle')) {
      width: $value;
      height: $value;
    }
  }

  // STYLE
  transition: $transition-base;
  transition-property: color, background-color;

  // skin fill
  @include prop(('skin': 'fill')) {
    color: $color-white;
  }
  @each $tone in $enum-tone {
    @include prop(('skin': 'fill', 'tone': $tone)) {
      background-color: tone('#{$tone}-standard');
      &:hover {
        background-color: tone('#{$tone}-lighten');
      }
      &:active {
        background-color: tone('#{$tone}-darken');
      }
    }
  }
  @each $theme in $enum-theme {
    @include prop(('skin': 'fill', 'theme': $theme)) {
      @include when('disabled') {
        color: theme('#{$theme}-fg-disabled');
        background-color: theme('#{$theme}-bg-disabled');
      }
    }
  }

  // skin flat
  @include prop(('skin': 'flat')) {
    background-color: transparent;
  }
  @each $tone in $enum-tone {
    @include prop(('skin': 'flat', 'tone': $tone)) {
      color: tone('#{$tone}-standard');
      &:hover,
      &:active {
        color: tone('#{$tone}-lighten');
      }
    }
  }
  @each $theme in $enum-theme {
    @include prop(('skin': 'flat', 'theme': $theme)) {
      @include when('disabled') {
        color: theme('#{$theme}-fg-disabled');
      }
    }
  }

  // skin plain
  @each $tone in $enum-tone {
    @include prop(('skin': 'plain', 'tone': $tone)) {
      color: tone('#{$tone}-standard');
      border-color: tone('#{$tone}-standard');
      &:active {
        color: tone('#{$tone}-lighten');
      }
    }
  }
  @each $theme in $enum-theme {
    @include prop(('skin': 'plain', 'theme': $theme)) {
      &:hover,
      &:active {
        background-color: theme('#{$theme}-bg-hover');
      }
      @include when('disabled') {
        color: theme('#{$theme}-fg-disabled');
        border-color: theme('#{$theme}-fg-disabled');
        background-color: theme('#{$theme}-bg-hover');
      }
    }
  }

  // skin silk
  @include prop(('skin': 'silk')) {
    background-color: transparent;
  }
  @each $tone in $enum-tone {
    @include prop(('skin': 'silk', 'tone': $tone)) {
      color: tone('#{$tone}-standard');
      border-color: tone('#{$tone}-standard');
      &:hover,
      &:active {
        color: tone('#{$tone}-lighten');
        border-color: tone('#{$tone}-lighten');
      }
    }
  }
  @each $theme in $enum-theme {
    @include prop(('skin': 'silk', 'theme': $theme)) {
      @include when('disabled') {
        color: theme('#{$theme}-fg-disabled');
        border-color: theme('#{$theme}-fg-disabled');
      }
    }
  }
}
