$menu-font-size: $font-size-base;
$menu-padding: $gutter-base / 2;

$menu-indicator-width: $border-width-base * 2;

$menu-icon-size: 0.2rem;
$menu-item-height: 0.32rem;
$menu-item-padding: $gutter-base;

$menu-anime-timing-function: ease-in-out;
$menu-anime-duration: 300ms;

$menu-sub-wrapper-min-width: 1.28rem;

@include define-atom('menu-reset') {
  display: inline-block;
  padding: 0;
  margin: 0;
}

@include define-atom('menu-part-v') {
  width: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: stretch;
}

@include define-atom('menu-part-h') {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}

@include define-atom('menu-item-icon') {
  width: $menu-icon-size;
  height: $menu-icon-size;
  line-height: 1;
  display: flex;
  flex: none;
  justify-content: center;
  align-items: center;
}

@include define-atom('menu-item-inner-v') {
  width: 100%;
  height: $menu-item-height;
  display: flex;
  flex-wrap: nowrap;
  white-space: nowrap;
  align-items: center;
  padding: 0 $menu-item-padding;
}

@include define-atom('menu-item-label-v') {
  flex: 1;
}

@include define-atom('menu-item-inner-h') {
  height: $menu-item-height;
  display: flex;
  flex: none;
  flex-wrap: nowrap;
  white-space: nowrap;
  align-items: center;
  padding: 0 $menu-item-padding;
}

@include define-atom('menu-item-transition') {
  transition: $transition-1;
  transition-property: all background-color;
}

/**
 * Control: Menu
 */
@include comp('menu') {
  user-select: none;

  // initial
  @include extend-atom('menu-reset');
  @include elem('start', 'center', 'end') {
    @include extend-atom('menu-reset');
  }

  font-size: $menu-font-size;

  // LAYOUT direction vertical

  @include prop((direction: 'vertical')) {
    @include extend-atom('menu-part-v');
    height: 100%;
    padding: $menu-padding 0;

    @include elem('start', 'center', 'end') {
      @include extend-atom('menu-part-v');
    }
    @include elem('end') {
      margin-top: auto;
    }
  }

  // LAYOUT direction horizontal

  @include prop((direction: 'horizontal')) {
    @include extend-atom('menu-part-h');

    @include elem('start', 'center', 'end') {
      @include extend-atom('menu-part-h');
      min-height: $menu-item-height;
    }
    @include elem('end') {
      margin-left: auto;
    }
  }

  // STYLE skin plain

  @include prop((skin: 'plain')) {
    &::before {
      content: ' ';
      display: block;
      position: absolute;
    }
  }

  @include prop((skin: 'plain', direction: 'vertical')) {
    &::before {
      top: 0;
      bottom: 0;
      width: $border-width-base;
    }
  }

  @include prop((skin: 'plain', direction: 'vertical', position: 'left')) {
    &::before {
      right: 0;
    }
  }
  @include prop((skin: 'plain', direction: 'vertical', position: 'right')) {
    &::before {
      left: 0;
    }
  }

  @include prop((skin: 'plain', direction: 'horizontal')) {
    &::before {
      bottom: 0;
      left: 0;
      right: 0;
      height: $border-width-base;
    }
  }

  @each $theme-key in $enum-theme {
    @include prop((skin: 'plain', theme: $theme-key)) {
      color: theme(#{$theme-key}-fg-normal);
      background-color: theme(#{$theme-key}-bg-normal);

      @include when('bordered') {
        &::before {
          background-color: theme(#{$theme-key}-bd-normal);
        }
      }
    }
  }

  // STYLE skin flat
  // TODO

  // STYLE skin fill
  // TODO
}
