/**
 * Control: Pagination
 */
@include comp('pagination') {
  position: relative;
  user-select: none;

  display: flex;
  white-space: nowrap;
  flex-wrap: nowrap;

  border: $border-initial;
  padding: 0;
  margin: 0;

  @include elem('item') {
    color: inherit;
    background: transparent;
    border: $border-initial;

    padding: 0;
    margin-top: -$border-width-base;
    margin-bottom: -$border-width-base;
    margin-left: -$border-width-base;
    &:last-child {
      margin-right: -$border-width-base;
    }

    transition: transition(200ms);
    transition-property: all, color, background-color, border-color;
  }

  @include elem('indicator-previous') {
    border-top-left-radius: $border-radius-base;
    border-bottom-left-radius: $border-radius-base;
  }

  @include elem('indicator-next') {
    border-top-right-radius: $border-radius-base;
    border-bottom-right-radius: $border-radius-base;
  }

  @each $size, $value in $button-height-map {
    @include prop((size: $size)) {
      font-size: map-get($map: $button-font-size-map, $key: $size);
      @include elem('item') {
        min-width: $value;
        height: $value;
        padding: 0 ($value / 4);
      }
      @include elem('ellipsis', 'indicator-previous', 'indicator-next') {
        width: $value;
      }
    }
  }

  // STYLE

  @each $theme in $enum-theme {
    @include prop(
      (theme: $theme, skin: 'fill'),
      (theme: $theme, skin: 'plain'),
      (theme: $theme, skin: 'flat')
    ) {
      color: theme('#{$theme}-fg-normal');
      background-color: theme('#{$theme}-bg-normal');
    }

    @include prop(
      (theme: $theme, skin: 'fill'),
      (theme: $theme, skin: 'plain'),
      (theme: $theme, skin: 'silk')
    ) {
      border-color: theme('#{$theme}-bd-normal');
      @include elem('item') {
        border-color: theme('#{$theme}-bd-normal');
      }
    }

    @include prop(
      (theme: $theme, skin: 'flat'),
      (theme: $theme, skin: 'plain'),
      (theme: $theme, skin: 'silk')
    ) {
      @include elem('item') {
        &:hover {
          color: tone('primary-lighten');
        }
      }
    }

    @include prop((theme: $theme, skin: 'fill'), (theme: $theme, skin: 'plain')) {
      @include elem('item') {
        &:hover {
          background-color: theme('#{$theme}-bg-hover');
        }
      }
    }
  }

  @include prop((skin: 'fill')) {
    @include elem('item') {
      @include when('selected') {
        &,
        &:hover {
          color: $color-white;
          background-color: tone('primary-standard');
        }
      }
    }
  }

  @include prop((skin: 'fill'), (skin: 'plain'), (skin: 'silk')) {
    @include elem('item') {
      @include when('selected') {
        border-color: tone('primary-standard');
        & + .#{class-elem(item)} {
          border-left-color: tone('primary-standard');
        }
      }
    }
  }

  @include prop((skin: 'flat'), (skin: 'plain'), (skin: 'silk')) {
    @include elem('item') {
      @include when('selected') {
        color: tone('primary-standard');
      }
    }
  }
}
