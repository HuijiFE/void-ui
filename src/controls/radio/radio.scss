.#{$void}-radio {
  @include flex(flex-start,center,center);
  display: inline-flex;
  height: map-get($map: $button-rect-sizes, $key: medium);
  cursor: pointer;
  user-select: none;
  .radio-outer {
    @include flex(center,center,center);
    position: relative;
    width: $radio-outter-size;
    height: $radio-outter-size;
    border: $border-base;
    border-radius: 50%;
    overflow: hidden;
  }
  .radio-inner {
    opacity: 0;
    width: $radio-inner-size;
    height: $radio-inner-size;
    background: $radio-inner-background;
    border: $border-base;
    border-radius: 50%;
    transform: scale(0);
  }
  .radio-input {
    opacity: 0;
    outline: none;
    position: absolute;
    z-index: -1;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: 0;
  }

  &.genre {
    @each $genre in $ss-genres {
      &-#{$genre} {
        .radio-outer {
          border-color: map-get($map:$genre-border-interative, $key:$genre);
        }
      }
    }
  }
  .radio-content {
    @include clear-baseline();
  }
  .radio-outer + .radio-content {
    margin-left: $radio-gutter;
  }
  &:hover {
    .radio-outer {
      border-color: $color-primary;
    }
  }
  &.checked {
    .radio-outer {
      background-color: $color-primary;
      border-color: $color-primary;
    }
    .radio-inner {
      opacity: 1;
      transform: scale(1);
      @include gen-transition-base((opacity, transform));
    }
  }
  &.disabled {
    cursor: default;
    &.genre {
      @each $genre in $ss-genres {
        &-#{$genre} {
          .radio-outer {
            border-color: map-get($map: $genre-foreground-disabled, $key: $genre);
            background-color: map-get($map: $genre-background-hover, $key: $genre);
          }
          .radio-inner {
            color: map-get($map: $genre-foreground-disabled, $key: $genre);
          }
        }
      }
    }
  }
  & + & {
    margin-left: $radio-margin;
  }
}
