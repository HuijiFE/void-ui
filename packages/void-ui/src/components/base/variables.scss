/**
 * Void-UI style variables
 */

// ================================================================
// Base

$vd-modern-css-variables: true;

// Typography

$font-family-base: 'Helvetica Neue', 'Helvetica', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', '微软雅黑', 'Arial', sans-serif;

$font-size-base: 15 !default;
$line-height-base: 1.618 !default;

// Core

$type-theme:  'lite', 'dark' !default;
$type-tone:   'primary', 'secondary', 'success', 'warning', 'danger' !default;
$type-skin:   'fill', 'flat', 'plain', 'silk';
$type-shape:  'rect', 'pill', 'square', 'circle';
$type-size:   'xsmall', 'small', 'medium', 'large', 'xlarge';

// Colors

$color-white:   #ffffff !default;
$color-gray:    #777777 !default;
$color-black:   #000000 !default;

$color-border-common: rgba(128, 128, 128, 0.1) !default;

// theme
// fg: foreground color, as well as text color
// bg: background color
// bd: border color
// The border color `bd-normal` should be same as `bg-hover`.

$color-map-theme-lite: (
  fg-emphasize:       rgb(24, 24, 24),
  fg-normal:          rgb(56, 56, 56),
  fg-sub:             rgb(88, 88, 88),
  fg-placeholder:     rgb(88, 88, 88),
  fg-disabled:        rgb(88, 88, 88),

  bg-higher:          rgb(247, 247, 247),
  bg-high:            rgb(251, 251, 251),
  bg-normal:          rgb(255, 255, 255),
  bg-low:             rgb(251, 251, 251),
  bg-lower:           rgb(247, 247, 247),
  bg-hover:           rgb(227, 227, 227),
  bg-disabled:        rgb(227, 227, 227),

  bd-normal:          rgb(227, 227, 227), // same as bg-hover
  bd-disabled:        rgb(227, 227, 227), // same as fg-disabled
  bd-focus:           rgb(227, 227, 227),
) !default;

$color-map-theme-dark: (
  fg-emphasize:       rgb(255, 255, 255),
  fg-normal:          rgb(223, 223, 223),
  fg-sub:             rgb(191, 191, 191),
  fg-placeholder:     rgb(191, 191, 191),
  fg-disabled:        rgb(191, 191, 191),

  bg-higher:          rgb(40, 40, 40),
  bg-high:            rgb(36, 36, 36),
  bg-normal:          rgb(32, 32, 32),
  bg-low:             rgb(28, 28, 28),
  bg-lower:           rgb(24, 24, 24),
  bg-hover:           rgb(52, 52, 52),
  bg-disabled:        rgb(52, 52, 52),

  bd-normal:          rgb(52, 52, 52), // same as bg-hover
  bd-disabled:        rgb(52, 52, 52), // same as fg-disabled
  bd-focus:           rgb(52, 52, 52),
) !default;

$color-map-theme: (
  lite: $color-map-theme-lite,
  dark: $color-map-theme-dark,
) !default;

@if $vd-modern-css-variables {
  :root {
    @each $theme, $color-map in $color-map-theme {
      @each $role-level, $value in $color-map {
        --theme-#{$theme}-#{$role-level}: #{$value};
      }
    }
  }
}

@function theme($theme: 'lite', $role: 'fg', $level: 'normal') {
  $sub-map: map-get($map: $color-map-theme, $key: $theme);
  @if $sub-map == null {
    @error 'Theme #{$theme} not found.';
  }

  $value: map-get($map: $sub-map, $key: #{$role}-#{$level});

  @if $value {
    @if $vd-modern-css-variables {
      @return var(--theme-#{$theme}-#{$role}-#{$level});
    }
    @return $value;
  } @else {
    @error 'Theme color #{$theme}-#{$role}-#{$level} not found.';
  }
}

// tone

$color-map-tone-success: (
  lightener:    rgb(29, 220, 29),
  lighten:      rgb(27, 204, 27),
  standard:     rgb(25, 189, 25),
  darken:       rgb(23, 174, 23),
  darkener:     rgb(21, 159, 21),
) !default;

$color-map-tone-warning: (
  lightener:    rgb(255, 156, 76),
  lighten:      rgb(255, 145, 71),
  standard:     rgb(244, 134, 66),
  darken:       rgb(224, 124, 61),
  darkener:     rgb(205, 113, 55),
) !default;

$color-map-tone-danger: (
  lightener:    rgb(255, 95, 2),
  lighten:      rgb(255, 89, 2),
  standard:     rgb(255, 82, 1),
  darken:       rgb(255, 76, 1),
  darkener:     rgb(253, 69, 1),
) !default;

$color-map-tone-primary: (
  lightener:    rgb(46, 203, 255),
  lighten:      rgb(43, 189, 243),
  standard:     rgb(40, 175, 225),
  darken:       rgb(37, 161, 207),
  darkener:     rgb(34, 147, 189),
) !default;

$color-map-tone-secondary: (
  lightener:    rgb(28, 212, 191),
  lighten:      rgb(26, 197, 178),
  standard:     rgb(24, 183, 164),
  darken:       rgb(22, 168, 151),
  darkener:     rgb(20, 153, 138),
) !default;

$color-map-tone: (
  primary:      $color-map-tone-primary,
  secondary:    $color-map-tone-secondary,
  success:      $color-map-tone-success,
  warning:      $color-map-tone-warning,
  danger:       $color-map-tone-danger,
) !default;

@if $vd-modern-css-variables {
  :root {
    @each $tone, $color-map in $color-map-tone {
      @each $level, $value in $color-map {
        --tone-#{$tone}-#{$level}: #{$value};
      }
    }
  }
}

@function tone($tone: 'primary', $level: 'standard') {
  $sub-map: map-get($map: $color-map-tone, $key: $tone);
  @if $sub-map == null {
    @error 'Tone #{$tone} not found.';
  }

  $value: map-get($map: $sub-map, $key: $level);

  @if $value {
    @if $vd-modern-css-variables {
      @return var(--tone-#{$tone}-#{$level});
    }
    @return $value;
  } @else {
    @error 'Tone color #{$tone}-#{$level} not found.';
  }
}

// Raise (Shadow)

@function __gen-raise-shadow($level) {
  @return (
    rgba(0, 0, 0, (0.12 + 0.01 * $level)) 0 rem(2 * $level) rem(4 * $level),
    rgba(0, 0, 0, (0.10 + 0.01 * $level)) 0 rem(0.5 * $level) rem(1 * $level),
  );
}

$raise-shadow-map: (
  1: __gen-raise-shadow(1),
  2: __gen-raise-shadow(2),
  3: __gen-raise-shadow(3),
  4: __gen-raise-shadow(4),
  5: __gen-raise-shadow(5),
  6: __gen-raise-shadow(6),
  7: __gen-raise-shadow(7),
  8: __gen-raise-shadow(8),
) !default;

@if $vd-modern-css-variables {
  :root {
    @each $level, $value in $raise-shadow-map {
      --raise-#{$level}: #{$value};
    }
  }
}

@function raise-shadow($level: 1) {
  @return map-get($map: $raise-shadow-map, $key: $level);
}

$raise-base:    raise-shadow(1) !default;
$raise-hover:   raise-shadow(8) !default;

$raise-shadow-transition: box-shadow 0.32s ease-out 0s !default;

// Typographic

$font-size-map: (
  xsmall:   12,
  small:    14,
  medium:   15,
  large:    16,
  xlarge:   18,
) !default;

@function font-size($key) {
  @return map-get($font-size-map, $key);
}

$font-size-min:     12 !default;
$font-size-base:    font-size('medium') !default;

$line-height-base:  1.6 !default;

// Gap Border Radius Opacity

$gap-map: (
  xsmall:   4,
  small:    8,
  medium:   16,
  large:    24,
  xlarge:   32,
) !default;

@function gap($key) {
  @return map-get($gap-map, $key);
}

$gap-base: gap('medium') !default;

$gap-icon-multiplier: 0.618 !default; 

// border

$border-base: 1 !default;

// radius

$radius-base: 2 !default;

// opacity

$opacity-half: 0.6 !default;

// Responsive

$type-breakpoint-key: 'xs', 'sm', 'md', 'lg', 'xl';
$type-media-alias: $type-breakpoint-key, 'gtXs', 'ltSm', 'gtSm', 'ltMd', 'gtMd', 'ltLg', 'gtLg', 'ltXl';

$breakpoints: (
  xs: 0,
  sm: 600,
  md: 960,
  lg: 1280,
  xl: 1920,
) !default;

@function breakpoint($key) {
  @return map-get($breakpoints, $key);
}

// ================================================================
// General

// Button

$button-size-map: (
  xsmall:   24,
  small:    32,
  medium:   40,
  large:    48,
  xlarge:   56,
) !default;

$button-font-size-map: (
  xsmall:   12,
  small:    14,
  medium:   18,
  large:    20,
  xlarge:   24,
) !default;

$button-min-width-multiple:   2.618 !default;
$button-padding-multiple:     0.618 !default;
$button-gap-icon-text:        $gap-icon-multiplier !default;
$button-transition-duration:  160ms !default;
$button-group-gap-multiple:   1 / 2 * 0.618;
$button-translucent-hover:    0.12;
$button-translucent-active:   0.16;

// ================================================================
// Layout

// z-index

$z-index-float: 1600 !default;

$z-index-popover: $z-index-float;

$type-direction: row, row-reverse, column, column-reverse;

$type-flex-direction: row, row-reverse, column, column-reverse;
$type-flex-wrap: nowrap, wrap, wrap-reverse;
$type-flex-align: start, center, end, space-between, space-around, space-evenly, stretch;
$type-flex-justify: start, center, end, space-between, space-around, space-evenly;
$type-flex-preset: initial, auto, none;

$type-dock-position: 'center', 'top', 'bottom', 'left', 'right';
$type-float-position: 'top', 'bottom', 'top-or-bottom', 'left', 'right', 'left-or-right';

// Card

$card-header-height: 40 !default;
$card-header-font-size: font-size('medium') + 1 !default;
$card-content-font-size: font-size('medium');

// Flow

$swimlane-padding: 32 !default;

$container-width-map: (
  xs: 100%,
  sm: 100%,
  md: 960px,
  lg: 1200px,
  xl: 1200px,
) !default;

$container-width-transition: width ease-in-out 160ms;

// ================================================================
// Effect

// Acrylic

$acrylic-blur-amount: 12 !default;

$acrylic-brightness-map: (
  lite: 85%,
  dark: 115%,
) !default;

$acrylic-cover-tone-opacity:    0.2 !default;
$acrylic-cover-theme-opacity:   0.5 !default;

// ================================================================
// Form

$form-font-size: 14 !default;

$form-row-height: 32 !default;

$form-component-height: 24 !default;

$form-symbol-size: $form-font-size !default;
$form-symbol-transition-duration: 240ms !default;
