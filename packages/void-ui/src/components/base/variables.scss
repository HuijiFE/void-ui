/**
 * Void-UI style variables
 */

// ================================================================
// Base

// Typography

$font-family-base: 'Helvetica Neue', 'Helvetica', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', '微软雅黑', 'Arial', sans-serif;

$font-size-base: 15 !default;
$line-height-base: 1.618 !default;

// Core

$type-theme:  'lite', 'dark' !default;
$type-tone:   'primary', 'secondary', 'success', 'warning', 'danger' !default;
$type-skin:   'fill', 'flat', 'plain', 'silk';
$type-shape:  'rect', 'pill', 'square', 'circle';
$type-size:   'xsmall', 'small', 'medium', 'large', 'xlarge';

// Colors

$color-white:   #ffffff !default;
$color-gray:    #777777 !default;
$color-black:   #000000 !default;

// theme
// fg: foreground color, as well as text color
// bg: background color
// bd: border color
// The border color `bd-normal` should be same as `bg-hover`.

$color-map-theme-lite: (
  fg-emphasize:       #222222,
  fg-normal:          #333333,
  fg-sub:             #888888,
  fg-placeholder:     #999999,
  fg-disabled:        #bbbbbb,

  bg-higher:          #f5f5f5,
  bg-high:            #fafafa,
  bg-normal:          #ffffff,
  bg-low:             #fafafa,
  bg-lower:           #f5f5f5,
  bg-hover:           #eeeeee,
  bg-disabled:        #efefef,

  bd-normal:          #eeeeee, // same as bg-hover
  bd-disabled:        #bbbbbb, // same as fg-disabled
  bd-focus:           #888888,
) !default;

$color-map-theme-dark: (
  fg-emphasize:       #f5f5f5,
  fg-normal:          #eeeeee,
  fg-sub:             #aaaaaa,
  fg-placeholder:     #999999,
  fg-disabled:        #777777,

  bg-higher:          #494949,
  bg-high:            #444444,
  bg-normal:          #3e3e3e,
  bg-low:             #383838,
  bg-lower:           #333333,
  bg-hover:           #4e4e4e,
  bg-disabled:        #555555,

  bd-normal:          #4e4e4e, // same as bg-hover
  bd-disabled:        #777777, // same as fg-disabled
  bd-focus:           #aaaaaa,
) !default;

$color-map-theme: (
  lite: $color-map-theme-lite,
  dark: $color-map-theme-dark,
) !default;

@function theme($theme: 'lite', $role: 'fg', $level: 'normal') {
  $sub-map: map-get($map: $color-map-theme, $key: $theme);
  @if $sub-map == null {
    @error 'Theme #{$theme} not found.';
  }

  $value: map-get($map: $sub-map, $key: #{$role}-#{$level});

  @if $value {
    @return $value;
  } @else {
    @error 'Theme color #{$theme}-#{$role}-#{$level} not found.';
  }
}

// tone

$color-map-tone-primary: (
  lightener:  #34d2e9,
  lighten:    #00bedb,
  standard:   #00abd0,
  darken:     #0098c2,
  darkener:   #0080b0,
) !default;

$color-map-tone-secondary: (
  lightener:  #e934e9,
  lighten:    #e612db,
  standard:   #d000c6,
  darken:     #c200b8,
  darkener:   #b000b0,
) !default;

$color-map-tone-success: (
  lightener:  #46eb6d,
  lighten:    #2cdb55,
  standard:   #24cf4c,
  darken:     #21bd45,
  darkener:   #1da63d,
  ) !default;

$color-map-tone-warning: (
  lightener:  #ffee44,
  lighten:    #ffdd33,
  standard:   #ffcc00,
  darken:     #ffbb00,
  darkener:   #ffaa00,
) !default;

$color-map-tone-danger: (
  lightener:  #ff6666,
  lighten:    #ff4d4d,
  standard:   #ff3333,
  darken:     #e62d2d,
  darkener:   #cc2828,
) !default;

$color-map-tone: (
  primary:      $color-map-tone-primary,
  secondary:    $color-map-tone-secondary,
  success:      $color-map-tone-success,
  warning:      $color-map-tone-warning,
  danger:       $color-map-tone-danger,
) !default;

@function tone($tone: 'primary', $level: 'standard') {
  $sub-map: map-get($map: $color-map-tone, $key: $tone);
  @if $sub-map == null {
    @error 'Tone #{$tone} not found.';
  }

  $value: map-get($map: $sub-map, $key: $level);

  @if $value {
    @return $value;
  } @else {
    @error 'Tone color #{$tone}-#{$level} not found.';
  }
}

// Raise

$raise-shadow-map: (
  1: (
    rgba(0, 0, 0, (0.12 + 0.02 * 1)) 0 rem(2 * 1) rem(4 * 1),
    rgba(0, 0, 0, (0.10 + 0.02 * 1)) 0 rem(0.5 * 1) rem(1 * 1),
  ),
  2: (
    rgba(0, 0, 0, (0.12 + 0.02 * 2)) 0 rem(2 * 2) rem(4 * 2),
    rgba(0, 0, 0, (0.10 + 0.02 * 2)) 0 rem(0.5 * 2) rem(1 * 2),
  ),
  3: (
    rgba(0, 0, 0, (0.12 + 0.02 * 3)) 0 rem(2 * 3) rem(4 * 3),
    rgba(0, 0, 0, (0.10 + 0.02 * 3)) 0 rem(0.5 * 3) rem(1 * 3),
  ),
  4: (
    rgba(0, 0, 0, (0.12 + 0.02 * 4)) 0 rem(2 * 4) rem(4 * 4),
    rgba(0, 0, 0, (0.10 + 0.02 * 4)) 0 rem(0.5 * 4) rem(1 * 4),
  ),
  5: (
    rgba(0, 0, 0, (0.12 + 0.02 * 5)) 0 rem(2 * 5) rem(4 * 5),
    rgba(0, 0, 0, (0.10 + 0.02 * 5)) 0 rem(0.5 * 5) rem(1 * 5),
  ),
  6: (
    rgba(0, 0, 0, (0.12 + 0.02 * 6)) 0 rem(2 * 6) rem(4 * 6),
    rgba(0, 0, 0, (0.10 + 0.02 * 6)) 0 rem(0.5 * 6) rem(1 * 6),
  ),
  7: (
    rgba(0, 0, 0, (0.12 + 0.02 * 7)) 0 rem(2 * 7) rem(4 * 7),
    rgba(0, 0, 0, (0.10 + 0.02 * 7)) 0 rem(0.5 * 7) rem(1 * 7),
  ),
  8: (
    rgba(0, 0, 0, (0.12 + 0.02 * 8)) 0 rem(2 * 8) rem(4 * 8),
    rgba(0, 0, 0, (0.10 + 0.02 * 8)) 0 rem(0.5 * 8) rem(1 * 8),
  ),
) !default;

@function raise-shadow($level: 1) {
  @return map-get($map: $raise-shadow-map, $key: $level);
}

$raise-base:    raise-shadow(1) !default;
$raise-hover:   raise-shadow(8) !default;

$raise-shadow-transition: box-shadow 0.32s ease-out 0s !default;

// Typographic

$font-size-map: (
  xsmall:   12,
  small:    14,
  medium:   15,
  large:    16,
  xlarge:   18,
) !default;

@function font-size($key) {
  @return map-get($font-size-map, $key);
}

$font-size-min:     12 !default;
$font-size-base:    font-size('medium') !default;

$line-height-base:  1.6 !default;

// Gap Border Radius Opacity

$gap-map: (
  xsmall:   4,
  small:    8,
  medium:   16,
  large:    24,
  xlarge:   32,
) !default;

@function gap($key) {
  @return map-get($gap-map, $key);
}

$gap-base: gap('medium') !default;

$gap-icon-multiplier: 0.618 !default; 

// border

$border-base: 1 !default;

// radius

$radius-base: 2 !default;

// opacity

$opacity-half: 0.6 !default;

// Responsive

$type-breakpoint-key: 'xs', 'sm', 'md', 'lg', 'xl';
$type-media-alias: $type-breakpoint-key, 'gtXs', 'ltSm', 'gtSm', 'ltMd', 'gtMd', 'ltLg', 'gtLg', 'ltXl';

$breakpoints: (
  xs: 0,
  sm: 600,
  md: 960,
  lg: 1280,
  xl: 1920,
) !default;

@function breakpoint($key) {
  @return map-get($breakpoints, $key);
}

// ================================================================
// General

// Button

$button-size-map: (
  xsmall:   24,
  small:    32,
  medium:   40,
  large:    48,
  xlarge:   56,
) !default;

$button-font-size-map: (
  xsmall:   12,
  small:    14,
  medium:   18,
  large:    20,
  xlarge:   24,
) !default;

$button-min-width-multiple:   2.618 !default;
$button-padding-multiple:     0.618 !default;
$button-gap-icon-text:        $gap-icon-multiplier !default;
$button-transition-duration:  0.2s !default;
$button-group-gap-multiple:   1 / 2 * 0.618;
$button-translucent-hover:    0.12;
$button-translucent-active:   0.16;

// ================================================================
// Layout

// z-index

$z-index-float: 1600 !default;

$z-index-popover: $z-index-float;

$type-direction: row, row-reverse, column, column-reverse;

$type-flex-direction: row, row-reverse, column, column-reverse;
$type-flex-wrap: nowrap, wrap, wrap-reverse;
$type-flex-align: start, center, end, space-between, space-around, space-evenly, stretch;
$type-flex-justify: start, center, end, space-between, space-around, space-evenly;
$type-flex-preset: initial, auto, none;

$type-dock-position: 'center', 'top', 'bottom', 'left', 'right';
$type-float-position: 'top', 'bottom', 'top-or-bottom', 'left', 'right', 'left-or-right';

// Card

$card-header-height: 40 !default;
$card-header-font-size: font-size('medium') + 1 !default;
$card-content-font-size: font-size('medium');

// Flow

$swimlane-padding: 32 !default;

$container-width-map: (
  xs: 100%,
  sm: 100%,
  md: 800px,
  lg: 1200px,
  xl: 1200px,
) !default;

// ================================================================
// Effect

// Acrylic

$acrylic-blur-amount: 12 !default;

$acrylic-brightness-map: (
  lite: 85%,
  dark: 115%,
) !default;

$acrylic-cover-layer-opacity: 0.75;

// ================================================================
// Form

$form-font-size: 14 !default;

$form-row-height: 32 !default;

$form-component-height: 24 !default;

$form-symbol-size: $form-font-size !default;
$form-symbol-transition-duration: 240ms !default;
