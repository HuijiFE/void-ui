// tslint:disable:no-console
// tslint:disable:no-relative-imports
// tslint:disable:missing-jsdoc

import * as fs from 'fs';
import * as path from 'path';
import * as ejs from 'ejs';
import * as globby from 'globby';
import chalk from 'chalk';

import { toAlias } from './utils';

function genFile(template: string): void {
  ejs.renderFile(template, { globby, path, toAlias }, (error, str) => {
    const file: string = template.replace(/\.ejs$/, '');
    const oldContent: string = fs.existsSync(file)
      ? fs.readFileSync(file).toString()
      : '';
    const newContent: string = `// Do not edit this file. It is script generated.\n// Template: ${template}\n\n${str}`;
    if (oldContent === newContent) {
      console.log(chalk.green(file), chalk.cyan('no changes'));
    } else {
      fs.writeFileSync(file, newContent);
      console.log(chalk.greenBright(file), chalk.cyanBright('done'));
    }
  });
}

const patterns: string[] = fs
  .readdirSync('.')
  .filter(
    name =>
      name !== 'node_modules' &&
      !name.startsWith('.') &&
      fs.lstatSync(name).isDirectory(),
  )
  .map(dir => `${dir}/**/*.ejs`);

globby.sync(patterns).forEach(genFile);
